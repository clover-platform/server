<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="plus.xyc.server.i18n.entry.mapper.EntryMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="plus.xyc.server.i18n.entry.entity.dto.Entry">
        <id column="id" property="id" />
        <result column="module_id" property="moduleId" />
        <result column="branch_id" property="branchId" />
        <result column="identifier" property="identifier" />
        <result column="value" property="value" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_user_id" property="createUserId" />
        <result column="update_user_id" property="updateUserId" />
        <result column="deleted" property="deleted" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, module_id, branch_id, identifier, value, create_time, update_time, create_user_id, update_user_id, deleted
    </sql>

    <select id="findByModuleId" resultMap="BaseResultMap">
        select e.*
        from entry as e left join branch b on e.branch_id = b.id
        where
        e.module_id = #{moduleId,jdbcType=NUMERIC}
        and e.deleted = false
        and b.deleted = false
    </select>

    <select id="query" resultMap="BaseResultMap">
        select
        e.*
        from entry as e
        left join branch as b on e.branch_id = b.id
        left join entry_state as es on e.id = es.entry_id
        where
        e.deleted = false and b.deleted = false
        <if test="query.language != null">
            and (es.language = #{query.language,jdbcType=NUMERIC} or es.language is null)
        </if>
        <if test="query.branchId != null">
            and e.branch_id = #{query.branchId,jdbcType=NUMERIC}
        </if>
        <if test="query.moduleId != null">
            and e.module_id = #{query.moduleId,jdbcType=NUMERIC}
        </if>
        <if test="keyword != null and keyword != ''">
            and (e.identifier like concat('%', #{keyword,jdbcType=VARCHAR}, '%') or e.value like concat('%', #{keyword,jdbcType=VARCHAR}, '%'))
        </if>
        order by es.translated is not null, es.translated asc, e.update_time desc
    </select>

    <select id="countTotal" resultType="long">
        select
        count(1) as total
        from entry as e
        left join branch as b on e.branch_id = b.id
        where
        e.deleted = false and b.deleted = false
        <if test="request.branch != null and request.branch != ''">
            and b.name = #{request.branch}
        </if>
        <if test="request.moduleId != null">
            and e.module_id = #{request.moduleId,jdbcType=NUMERIC}
        </if>
    </select>

    <select id="findByBranchId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from entry
        where
        branch_id = #{branchId,jdbcType=NUMERIC}
        and deleted = false
    </select>

    <select id="countByModuleIdAndBranchIdAndIdentifier" resultType="int">
        select count(*)
        from entry
        where module_id = #{moduleId,jdbcType=NUMERIC}
        AND branch_id = #{branchId,jdbcType=NUMERIC}
        AND identifier = #{identifier,jdbcType=VARCHAR}
        and deleted = false
    </select>

    <select id="findByModuleIdAndBranchId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from entry
        where
        module_id = #{moduleId,jdbcType=NUMERIC}
        AND branch_id = #{branchId,jdbcType=NUMERIC}
        and deleted = false
    </select>
    <select id="countByBranchIdAndDeleted" resultType="int">
        select count(*)
        from entry
        where branch_id = #{branchId,jdbcType=NUMERIC}
          AND deleted = #{deleted,jdbcType=BOOLEAN}
    </select>

    <select id="findIdByBranchIdAndDeleted" resultMap="BaseResultMap">
        select id
        from entry
        where branch_id = #{branchId,jdbcType=NUMERIC}
          AND deleted = #{deleted,jdbcType=BOOLEAN}
    </select>

</mapper>
